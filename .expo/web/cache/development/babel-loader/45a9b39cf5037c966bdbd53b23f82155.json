{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport createDataContext from \"./createDataContext\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar KEY = 'saved_feeds';\n\nvar saveFeeds = function saveFeeds(value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function saveFeeds$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(KEY, jsonValue));\n\n        case 4:\n          console.log('funcionou');\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('erro: ' + _context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar clearStorage = function clearStorage() {\n  return _regeneratorRuntime.async(function clearStorage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n        case 3:\n          alert('Funcionou!');\n          _context2.next = 10;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          alert('Algum problema ao limpar armazenamento');\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar feedListReducer = function feedListReducer(state, action) {\n  var newState = [];\n\n  switch (action.type) {\n    case 'add_feed':\n      newState = [].concat(_toConsumableArray(state), [{\n        urlFeed: action.payload.urlFeed,\n        titulo: action.payload.titulo\n      }]);\n      saveFeeds(newState);\n      return newState;\n\n    case 'delete_feed':\n      newState = state.filter(function (feed) {\n        return feed.urlFeed !== action.payload;\n      });\n      saveFeeds(newState);\n      return newState;\n\n    case 'restore_state':\n      newState = action.payload;\n      return newState;\n\n    case 'delete_all':\n      clearStorage();\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar addFeed = function addFeed(dispatch) {\n  return function (titulo, urlFeed, callback) {\n    dispatch({\n      type: 'add_feed',\n      payload: {\n        titulo: titulo,\n        urlFeed: urlFeed\n      }\n    });\n\n    if (callback) {\n      callback();\n    }\n\n    console.log('Salvou o feed');\n  };\n};\n\nvar deleteFeed = function deleteFeed(dispatch) {\n  return function (id) {\n    dispatch({\n      type: 'delete_feed',\n      payload: id\n    });\n    console.log('deletou o feed');\n  };\n};\n\nvar restoreState = function restoreState(dispatch) {\n  return function _callee() {\n    var savedState;\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(KEY));\n\n          case 3:\n            savedState = _context3.sent;\n\n            if (!savedState) {\n              console.log('não tem nada salvo');\n            } else {\n              dispatch({\n                type: 'restore_state',\n                payload: JSON.parse(savedState)\n              });\n            }\n\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('erro: ' + _context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\n\nvar deleteAll = function deleteAll(dispatch) {\n  return function () {\n    dispatch({\n      type: 'delete_all'\n    });\n    console.log('Apagou tudo!');\n  };\n};\n\nvar rssFeeds = [{\n  titulo: 'G1 - Todas as notícias',\n  urlFeed: 'http://g1.globo.com/dynamo/rss2.xml',\n  descricao: '',\n  urlSite: '',\n  urlImagem: ''\n}, {\n  titulo: 'G1 - Brasil',\n  urlFeed: 'http://g1.globo.com/dynamo/brasil/rss2.xml',\n  descricao: '',\n  urlSite: '',\n  urlImagem: ''\n}, {\n  titulo: 'G1 - Tecnologia e Games',\n  urlFeed: 'http://g1.globo.com/dynamo/tecnologia/rss2.xml',\n  descricao: '',\n  urlSite: '',\n  urlImagem: ''\n}, {\n  titulo: 'Jovem Nerd - Site Completo',\n  urlFeed: 'http://jovemnerd.com.br/rss',\n  descricao: '',\n  urlSite: '',\n  urlImagem: ''\n}];\n\nvar _createDataContext = createDataContext(feedListReducer, {\n  addFeed: addFeed,\n  deleteFeed: deleteFeed,\n  restoreState: restoreState,\n  deleteAll: deleteAll\n}, rssFeeds),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/src/context/FeedListContext.js"],"names":["createDataContext","AsyncStorage","KEY","saveFeeds","value","jsonValue","JSON","stringify","setItem","console","log","clearStorage","clear","alert","feedListReducer","state","action","newState","type","urlFeed","payload","titulo","filter","feed","addFeed","dispatch","callback","deleteFeed","id","restoreState","getItem","savedState","parse","deleteAll","rssFeeds","descricao","urlSite","urlImagem","Context","Provider"],"mappings":"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","sourcesContent":["import createDataContext from './createDataContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst KEY = 'saved_feeds';\n\nconst saveFeeds = async (value) => {\n    try {\n        const jsonValue = JSON.stringify(value);\n        await AsyncStorage.setItem(KEY, jsonValue);\n        console.log('funcionou');\n    } catch (e) {\n        console.log('erro: ' + e);\n    }\n}\n\nconst clearStorage = async () => {\n    try {\n        await AsyncStorage.clear();\n        alert('Funcionou!');\n    }\n    catch (e) {\n        console.log(e);\n        alert('Algum problema ao limpar armazenamento');\n    }\n}\n\nconst feedListReducer = (state, action) => {\n    let newState = [];\n    switch (action.type) {\n        case 'add_feed':\n            newState = [\n                ...state,\n                {\n                    urlFeed: action.payload.urlFeed,\n                    titulo: action.payload.titulo\n                }\n            ];\n            saveFeeds(newState)\n            return newState;\n        case 'delete_feed':\n            newState = state.filter(\n                (feed) => feed.urlFeed !== action.payload);\n            \n            saveFeeds(newState);\n            return newState;\n        case 'restore_state':\n            newState = action.payload;\n            return newState;\n        case 'delete_all':\n            clearStorage();\n            return [];\n        default:\n            return state;\n    }\n};\n\nconst addFeed = dispatch => {\n    return (titulo, urlFeed, callback) => {\n        dispatch({ type: 'add_feed', payload: { titulo, urlFeed } });\n        if (callback) {\n            callback();\n        }\n        console.log('Salvou o feed');\n    };\n};\n\nconst deleteFeed = dispatch => {\n    return (id) => {\n        dispatch({ type: 'delete_feed', payload: id });\n        console.log('deletou o feed');\n    };\n};\n\nconst restoreState = dispatch => async () => {\n    try {\n        const savedState = await AsyncStorage.getItem(KEY);\n        if (!savedState) {\n            console.log('não tem nada salvo');\n        }\n        else {\n            //console.log(savedState);\n            dispatch({ type: 'restore_state', payload: JSON.parse(savedState) })\n        }\n    } catch (e) {\n        console.log('erro: ' + e);\n    }\n}\n\nconst deleteAll = dispatch => {\n    return () => {\n        dispatch({ type: 'delete_all' })\n        console.log('Apagou tudo!');\n    }\n}\n\nconst rssFeeds = [\n    {\n        titulo: 'G1 - Todas as notícias',\n        urlFeed: 'http://g1.globo.com/dynamo/rss2.xml',\n        descricao: '',\n        urlSite: '',\n        urlImagem: ''\n    },\n    {\n        titulo: 'G1 - Brasil',\n        urlFeed: 'http://g1.globo.com/dynamo/brasil/rss2.xml',\n        descricao: '',\n        urlSite: '',\n        urlImagem: ''\n    },\n    {\n        titulo: 'G1 - Tecnologia e Games',\n        urlFeed: 'http://g1.globo.com/dynamo/tecnologia/rss2.xml',\n        descricao: '',\n        urlSite: '',\n        urlImagem: ''\n    },\n    {\n        titulo: 'Jovem Nerd - Site Completo',\n        urlFeed: 'http://jovemnerd.com.br/rss',\n        descricao: '',\n        urlSite: '',\n        urlImagem: ''\n    }\n    \n];\n\nexport const { Context, Provider } = createDataContext(\n    feedListReducer,\n    { addFeed, deleteFeed, restoreState, deleteAll },\n    rssFeeds\n);\n"]},"metadata":{},"sourceType":"module"}