{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\ResidenciaDEV\\\\ReactNative\\\\rss-react-native\\\\src\\\\screens\\\\ShowFeedScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Context as FeedListContext } from \"../context/FeedListContext\";\nimport { Context as FeedContext } from \"../context/FeedContext\";\nimport { useContext } from 'react';\nimport rssfeed from \"../api/rssfeed\";\n\nvar ShowFeedScreen = function ShowFeedScreen(_ref) {\n  var navigation = _ref.navigation;\n  var feedListContext = useContext(FeedListContext);\n  var feedID = navigation.getParam('id');\n\n  var _useContext = useContext(FeedContext),\n      state = _useContext.state,\n      fetchItems = _useContext.fetchItems,\n      getFeed = _useContext.getFeed;\n\n  fetchItems(getFeed(feedID));\n\n  var abrirLink = function abrirLink(link) {\n    Linking.openURL(link).catch(function (err) {\n      return console.error('Ocorreu um erro: ', err);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: state,\n    keyExtractor: function keyExtractor(item) {\n      return item.link;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, item.image), React.createElement(Text, {\n        style: styles.titulo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, item.titulo), React.createElement(Text, {\n        style: styles.dataPublicacao,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }\n      }, item.dataPublicacao)), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.descricao,\n        numberOfLines: 2,\n        ellipsizeMode: \"tail\",\n        onPress: function onPress() {\n          return abrirLink(item.link);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, item.descricao)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    borderTopWidth: 1,\n    borderColor: 'gray'\n  },\n  titulo: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 4,\n    margin: 5\n  },\n  descricao: {\n    fontSize: 8,\n    flex: 1\n  },\n  dataPublicacao: {\n    fontSize: 10,\n    fontStyle: 'italic'\n  },\n  icon: {\n    fontSize: 24\n  }\n});\nexport default ShowFeedScreen;","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/src/screens/ShowFeedScreen.js"],"names":["React","FlatList","TouchableOpacity","Context","FeedListContext","FeedContext","useContext","rssfeed","ShowFeedScreen","navigation","feedListContext","feedID","getParam","state","fetchItems","getFeed","abrirLink","link","Linking","openURL","catch","err","console","error","item","styles","row","image","titulo","dataPublicacao","descricao","StyleSheet","create","flexDirection","justifyContent","paddingVertical","paddingHorizontal","borderTopWidth","borderColor","fontSize","fontWeight","width","height","borderRadius","margin","flex","fontStyle","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button, Image, Linking } from 'react-native';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Context as FeedListContext } from '../context/FeedListContext'\nimport { Context as FeedContext } from '../context/FeedContext'\nimport { useContext } from 'react';\nimport rssfeed from '../api/rssfeed';\n\n\nconst ShowFeedScreen = ({ navigation }) => {\n    const feedListContext = useContext(FeedListContext);\n    const feedID = navigation.getParam('id');\n    //const feed = feedListContext.state.find((feed) => feed.urlFeed === feedID);\n    //const fetch = rssfeed(feed.urlFeed);\n    const { state, fetchItems, getFeed } = useContext(FeedContext);\n    fetchItems(getFeed(feedID));\n\n    const abrirLink = (link) => {\n        Linking.openURL(link).catch((err) => console.error('Ocorreu um erro: ', err));\n    }\n\n    return (\n        <>\n            <FlatList\n                data={state}\n                keyExtractor={(item) => item.link}\n                renderItem={({ item }) => {\n                    //atualmente só exibe o título, faça com que apareça data de publicação, \n                    //descrição (pode cortar em 100 ou 200 caracteres para não ficar muito grande), e imagem (caso tenha)\n                    //ao clicar em uma notícia, devemos chamar a função abrirLink que direciona o usuário para o link da notícia\n                    return (\n                        <>\n                            <View style={styles.row}>\n                                <Image style={styles.image}>{item.image}</Image>\n                                <Text style={styles.titulo}>{item.titulo}</Text>\n                                <Text style={styles.dataPublicacao}>{item.dataPublicacao}</Text>\n                            </View>\n                            <View>\n                                <Text style={styles.descricao} numberOfLines={2} ellipsizeMode='tail' \n                                    onPress={() => abrirLink(item.link)}>\n                                        {item.descricao}\n                                </Text>\n\n                            </View>\n                        </>\n                    );\n                }}\n            />\n        </>\n    );\n};\n\n//altere os estilos como desejar para melhorar o layout\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: 20,\n        paddingHorizontal: 10,\n        borderTopWidth: 1,\n        borderColor: 'gray'\n    },\n    titulo: {\n        fontSize: 14,\n        fontWeight: 'bold'\n    },\n    image: {\n        //pode alterar largura e altura como desejar\n        width: 100,\n        height: 100,\n        borderRadius: 4,\n        margin: 5\n    },\n    descricao: {\n        fontSize: 8, \n        flex: 1\n    },\n    dataPublicacao: {\n        fontSize: 10,\n        fontStyle: 'italic'\n    },\n    icon: {\n        fontSize: 24\n    }\n});\n\nexport default ShowFeedScreen;\n"]},"metadata":{},"sourceType":"module"}