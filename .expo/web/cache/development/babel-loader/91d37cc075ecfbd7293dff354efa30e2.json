{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _jsxFileName = \"E:\\\\ResidenciaDEV\\\\ReactNative\\\\rss-react-native\\\\node_modules\\\\react-native-icons\\\\SMXIconImage.ios.js\";\n\nvar React = require(\"react-native-web/dist/index\");\n\nvar StyleSheet = React.StyleSheet,\n    View = React.View,\n    requireNativeComponent = React.requireNativeComponent;\n\nvar shimAssert = require(\"./shim-assert\");\n\nvar ICON_REF = 'icon';\nvar SMXIconImage = React.createClass({\n  displayName: \"SMXIconImage\",\n  propTypes: {\n    name: React.PropTypes.string,\n    size: React.PropTypes.number,\n    color: React.PropTypes.string,\n    accessible: React.PropTypes.bool,\n    accessibilityLabel: React.PropTypes.string,\n    testID: React.PropTypes.string,\n    icon: React.PropTypes.object\n  },\n  setNativeProps: function setNativeProps(props) {\n    this.refs[ICON_REF].setNativeProps(props);\n  },\n  render: function render() {\n    var style = [styles.base, this.props.style];\n    shimAssert.basic(style, 'style must be initialized');\n    var name = this.props.name;\n    shimAssert.basic(name, 'name must be initialized');\n    var size = this.props.size;\n    shimAssert.basic(size, 'size must be initialized');\n    var color = this.props.color;\n\n    var nativeProps = _extends({}, this.props);\n\n    nativeProps.style = style;\n    nativeProps.icon = {\n      name: name,\n      size: size,\n      color: color\n    };\n    return React.createElement(SMXIconImageView, _extends({}, nativeProps, {\n      ref: ICON_REF,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }));\n  }\n});\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nvar SMXIconImageView = requireNativeComponent('FAKIconImage', SMXIconImage);\nmodule.exports = SMXIconImage;","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/node_modules/react-native-icons/SMXIconImage.ios.js"],"names":["StyleSheet","React","View","requireNativeComponent","shimAssert","require","ICON_REF","SMXIconImage","createClass","propTypes","name","PropTypes","string","size","number","color","accessible","bool","accessibilityLabel","testID","icon","object","setNativeProps","props","refs","render","style","styles","base","basic","nativeProps","create","overflow","SMXIconImageView","module","exports"],"mappings":"AAKA;;;;;;;;IAGMA,U,GAA6CC,K,CAA7CD,U;IAAYE,I,GAAiCD,K,CAAjCC,I;IAAMC,sB,GAA2BF,K,CAA3BE,sB;;AACxB,IAAIC,UAAU,GAAGC,OAAO,iBAAxB;;AAEA,IAAIC,QAAQ,GAAG,MAAf;AAEA,IAAIC,YAAY,GAAGN,KAAK,CAACO,WAAN,CAAkB;AAAA;AACnCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAET,KAAK,CAACU,SAAN,CAAgBC,MADb;AAETC,IAAAA,IAAI,EAAEZ,KAAK,CAACU,SAAN,CAAgBG,MAFb;AAGTC,IAAAA,KAAK,EAAEd,KAAK,CAACU,SAAN,CAAgBC,MAHd;AASTI,IAAAA,UAAU,EAAEf,KAAK,CAACU,SAAN,CAAgBM,IATnB;AAaTC,IAAAA,kBAAkB,EAAEjB,KAAK,CAACU,SAAN,CAAgBC,MAb3B;AAmBTO,IAAAA,MAAM,EAAElB,KAAK,CAACU,SAAN,CAAgBC,MAnBf;AAoBTQ,IAAAA,IAAI,EAAEnB,KAAK,CAACU,SAAN,CAAgBU;AApBb,GADwB;AAwBnCC,EAAAA,cAxBmC,0BAwBpBC,KAxBoB,EAwBN;AAC3B,SAAKC,IAAL,CAAUlB,QAAV,EAAoBgB,cAApB,CAAmCC,KAAnC;AACD,GA1BkC;AA4BnCE,EAAAA,MAAM,EAAE,kBAAY;AAClB,QAAIC,KAAK,GAAG,CAACC,MAAM,CAACC,IAAR,EAAc,KAAKL,KAAL,CAAWG,KAAzB,CAAZ;AACAtB,IAAAA,UAAU,CAACyB,KAAX,CAAkBH,KAAlB,EAAyB,2BAAzB;AAEA,QAAIhB,IAAI,GAAG,KAAKa,KAAL,CAAWb,IAAtB;AACAN,IAAAA,UAAU,CAACyB,KAAX,CAAkBnB,IAAlB,EAAwB,0BAAxB;AAEA,QAAIG,IAAI,GAAG,KAAKU,KAAL,CAAWV,IAAtB;AACAT,IAAAA,UAAU,CAACyB,KAAX,CAAkBhB,IAAlB,EAAwB,0BAAxB;AAEA,QAAIE,KAAK,GAAG,KAAKQ,KAAL,CAAWR,KAAvB;;AAEA,QAAIe,WAAW,GAAG,SAAc,EAAd,EAAiB,KAAKP,KAAtB,CAAlB;;AACAO,IAAAA,WAAW,CAACJ,KAAZ,GAAoBA,KAApB;AACAI,IAAAA,WAAW,CAACV,IAAZ,GAAmB;AACjBV,MAAAA,IAAI,EAAEA,IADW;AAEjBG,MAAAA,IAAI,EAAEA,IAFW;AAGjBE,MAAAA,KAAK,EAAEA;AAHU,KAAnB;AAMA,WAAO,oBAAC,gBAAD,eAAsBe,WAAtB;AAAmC,MAAA,GAAG,EAAExB,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;AAjDkC,CAAlB,CAAnB;AAoDA,IAAIqB,MAAM,GAAG3B,UAAU,CAAC+B,MAAX,CAAkB;AAC7BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,QAAQ,EAAE;AADN;AADuB,CAAlB,CAAb;AAMA,IAAIC,gBAAgB,GAAG9B,sBAAsB,CAAC,cAAD,EAAiBI,YAAjB,CAA7C;AAEA2B,MAAM,CAACC,OAAP,GAAiB5B,YAAjB","sourcesContent":["/**\n *\n * @providesModule SMXIconImage\n * @flow\n */\n'use strict';\n\nvar React = require('react-native');\nvar { StyleSheet, View, requireNativeComponent } = React;\nvar shimAssert = require('./shim-assert');\n\nvar ICON_REF = 'icon';\n\nvar SMXIconImage = React.createClass({\n  propTypes: {\n    name: React.PropTypes.string,\n    size: React.PropTypes.number,\n    color: React.PropTypes.string,\n\n    /**\n     * accessible - Whether this element should be revealed as an accessible\n     * element.\n     */\n    accessible: React.PropTypes.bool,\n    /**\n     * accessibilityLabel - Custom string to display for accessibility.\n     */\n    accessibilityLabel: React.PropTypes.string,\n\n    /**\n     * testID - A unique identifier for this element to be used in UI Automation\n     * testing scripts.\n     */\n    testID: React.PropTypes.string,\n    icon: React.PropTypes.object\n  },\n\n  setNativeProps(props:Object) {\n    this.refs[ICON_REF].setNativeProps(props);\n  },\n\n  render: function () {\n    var style = [styles.base, this.props.style];\n    shimAssert.basic( style, 'style must be initialized');\n\n    var name = this.props.name;\n    shimAssert.basic( name, 'name must be initialized');\n\n    var size = this.props.size;\n    shimAssert.basic( size, 'size must be initialized');\n\n    var color = this.props.color;\n\n    var nativeProps = Object.assign({},this.props);\n    nativeProps.style = style;\n    nativeProps.icon = {\n      name: name,\n      size: size,\n      color: color\n    };\n\n    return <SMXIconImageView {...nativeProps} ref={ICON_REF} />;\n  }\n});\n\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\n\nvar SMXIconImageView = requireNativeComponent('FAKIconImage', SMXIconImage);\n\nmodule.exports = SMXIconImage;\n"]},"metadata":{},"sourceType":"script"}