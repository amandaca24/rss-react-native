{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\ResidenciaDEV\\\\ReactNative\\\\rss-react-native\\\\src\\\\screens\\\\ShowFeedScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { Context as FeedContext } from \"../context/FeedContext\";\nimport { Context as FeedListContext } from \"../context/FeedListContext\";\nimport { useContext, useEffect } from 'react';\nimport rssfeed from \"../api/rssfeed\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport useResults from \"../hooks/useResults\";\nimport { Card } from 'react-native-elements';\nimport Styles from \"../styles/Styles\";\n\nvar ShowFeedScreen = function ShowFeedScreen(_ref) {\n  var navigation = _ref.navigation;\n  var feedListContext = useContext(FeedListContext);\n  var feedID = navigation.getParam('id');\n  var feed = feedListContext.state.find(function (feed) {\n    return feed.urlFeed === feedID;\n  });\n  var fetch = rssfeed(feed.urlFeed);\n\n  var _useContext = useContext(FeedContext),\n      state = _useContext.state,\n      fetchItems = _useContext.fetchItems,\n      deleteItem = _useContext.deleteItem,\n      restoreState = _useContext.restoreState;\n\n  fetchItems(fetch);\n  useEffect(function () {\n    restoreState();\n  }, []);\n\n  var abrirLink = function abrirLink(link) {\n    Linking.openURL(link).catch(function (err) {\n      return console.error('Ocorreu um erro: ', err);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: state,\n    keyExtractor: function keyExtractor(item) {\n      return item.link;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, React.createElement(Card.Title, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, item.titulo), React.createElement(View, {\n        style: Styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, React.createElement(Image, {\n        style: Styles.image,\n        source: item.imagem ? item.imagem : 'https://cdn.iconscout.com/icon/free/png-512/data-not-found-1965034-1662569.png',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        style: Styles.dataPublicacao,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }\n      }, item.dataPublicacao), React.createElement(FontAwesome, {\n        style: Styles.icons,\n        name: \"trash-o\",\n        color: \"black\",\n        size: 24,\n        onPress: function onPress() {\n          return deleteItem(item.link);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }\n      })), React.createElement(View, {\n        style: Styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: Styles.descricao,\n        numberOfLines: 3,\n        ellipsizeMode: \"tail\",\n        onPress: function onPress() {\n          return abrirLink(item.link);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, item.descricao))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }));\n};\n\nShowFeedScreen.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  return {\n    headerRight: function headerRight() {\n      return React.createElement(FontAwesome, {\n        style: Styles.icon,\n        name: \"plus-circle\",\n        color: \"black\",\n        size: 24,\n        onPress: function onPress() {\n          return navigation.navigate('Add', {\n            item: 'true'\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      });\n    }\n  };\n};\n\nexport default ShowFeedScreen;","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/src/screens/ShowFeedScreen.js"],"names":["React","FlatList","Context","FeedContext","FeedListContext","useContext","useEffect","rssfeed","FontAwesome","useResults","Card","Styles","ShowFeedScreen","navigation","feedListContext","feedID","getParam","feed","state","find","urlFeed","fetch","fetchItems","deleteItem","restoreState","abrirLink","link","Linking","openURL","catch","err","console","error","item","titulo","row","image","imagem","dataPublicacao","icons","descricao","navigationOptions","headerRight","icon","navigate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Image, Linking } from 'react-native';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport { Context as FeedContext } from '../context/FeedContext';\r\nimport { Context as FeedListContext } from '../context/FeedListContext';\r\nimport { useContext, useEffect } from 'react';\r\nimport rssfeed from '../api/rssfeed';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport useResults from '../hooks/useResults';\r\nimport { Card } from 'react-native-elements';\r\nimport Styles from '../styles/Styles';\r\n\r\nconst ShowFeedScreen = ({ navigation }) => {\r\n    const feedListContext = useContext(FeedListContext); //comunicação entre a classe de contexto com a view para uso do estado e métodos\r\n    const feedID = navigation.getParam('id'); //id passado da view anterior\r\n    const feed = feedListContext.state.find((feed) => feed.urlFeed === feedID); //vai buscar no contexto o feed com id passado como parâmetro\r\n    const fetch = rssfeed(feed.urlFeed); //vai criar uma instância de requisão http via axios\r\n    const { state, fetchItems, deleteItem, restoreState } = useContext(FeedContext); //comunicação com o contexto dos itens\r\n    fetchItems(fetch); //método que faz análise do xml via fast-xml-parser e salva os atributos localmente\r\n    \r\n    //useResults();\r\n\r\n    //Só é chamado após a renderização do DOM.\r\n    useEffect(() => {\r\n        restoreState();\r\n    }, []);\r\n   \r\n    //Abre o link no navegador \r\n    const abrirLink = (link) => {\r\n        Linking.openURL(link).catch((err) => console.error('Ocorreu um erro: ', err));\r\n    }\r\n\r\n    //Usa o estado vindo do FeedContext após o fetch no link do feed\r\n    //para preencher a lista\r\n    return (\r\n        <>\r\n           <FlatList\r\n                data={state}\r\n                keyExtractor={(item) => item.link}\r\n                renderItem={({ item }) => {\r\n                    \r\n                    return (\r\n                        <>\r\n                            <Card>\r\n                                <Card.Title>{item.titulo}</Card.Title>\r\n                                <View style={Styles.row}>\r\n                                    <Image style={Styles.image} source={item.imagem ? item.imagem : 'https://cdn.iconscout.com/icon/free/png-512/data-not-found-1965034-1662569.png'} />\r\n                                    <Text style={Styles.dataPublicacao}>{item.dataPublicacao}</Text>\r\n                                    \r\n                                    <FontAwesome style={Styles.icons} name='trash-o' color='black' size={24} \r\n                                        onPress={() => deleteItem(item.link)} />\r\n                                \r\n                                </View>\r\n                                <View style={Styles.row}>\r\n                                    <Text style={Styles.descricao} numberOfLines={3} ellipsizeMode='tail' \r\n                                        onPress={() => abrirLink(item.link)}>\r\n                                            {item.descricao}\r\n                                    </Text>\r\n                                    \r\n                                </View>\r\n                            </Card>\r\n                        </>\r\n                    );\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nShowFeedScreen.navigationOptions = ({ navigation }) => {\r\n    return {\r\n        headerRight: () => (\r\n            <FontAwesome style={Styles.icon} name='plus-circle' color='black' size={24} \r\n                onPress={() => navigation.navigate('Add', {item: 'true'})} />\r\n\r\n        )\r\n    };\r\n};\r\n\r\nexport default ShowFeedScreen;\r\n"]},"metadata":{},"sourceType":"module"}