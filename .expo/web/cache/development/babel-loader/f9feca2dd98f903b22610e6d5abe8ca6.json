{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _jsxFileName = \"E:\\\\ResidenciaDEV\\\\ReactNative\\\\rss-react-native\\\\node_modules\\\\react-native-icons\\\\SMXLoadingImage.ios.js\";\n\nvar React = require(\"react-native-web/dist/index\");\n\nvar StyleSheet = React.StyleSheet,\n    View = React.View,\n    requireNativeComponent = React.requireNativeComponent,\n    Animated = React.Animated,\n    Easing = React.Easing;\n\nvar shimAssert = require(\"./shim-assert\");\n\nvar SMXLoadingImage = React.createClass({\n  displayName: \"SMXLoadingImage\",\n  propTypes: {\n    name: React.PropTypes.string,\n    size: React.PropTypes.number,\n    color: React.PropTypes.string,\n    accessible: React.PropTypes.bool,\n    accessibilityLabel: React.PropTypes.string,\n    testID: React.PropTypes.string,\n    icon: React.PropTypes.object\n  },\n  getInitialState: function getInitialState() {\n    return {\n      angle: new Animated.Value(0)\n    };\n  },\n  setNativeProps: function setNativeProps(props) {},\n  _animate: function _animate() {\n    this.state.angle.setValue(0);\n    Animated.timing(this.state.angle, {\n      toValue: 360,\n      duration: 1200,\n      easing: Easing.linear\n    }).start(this._animate);\n  },\n  componentDidMount: function componentDidMount() {\n    this._animate();\n  },\n  render: function render() {\n    var transformStyle = {\n      transform: [{\n        rotate: this.state.angle.interpolate({\n          inputRange: [0, 360],\n          outputRange: ['0deg', '360deg']\n        })\n      }]\n    };\n    var style = [styles.base, this.props.style];\n    shimAssert.basic(style, 'style must be initialized');\n    var name = this.props.name;\n    shimAssert.basic(name, 'name must be initialized');\n    var size = this.props.size;\n    shimAssert.basic(size, 'size must be initialized');\n    var color = this.props.color;\n\n    var nativeProps = _extends({}, this.props);\n\n    nativeProps.icon = {\n      name: name,\n      size: size,\n      color: color\n    };\n    return React.createElement(Animated.View, {\n      style: [styles.base, style, transformStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }\n    }, React.createElement(SMXLoadingImageView, _extends({\n      style: {\n        backgroundColor: 'transparent'\n      }\n    }, nativeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    })));\n  }\n});\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nvar SMXLoadingImageView = requireNativeComponent('FAKIconImage', SMXLoadingImage);\nmodule.exports = SMXLoadingImage;","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/node_modules/react-native-icons/SMXLoadingImage.ios.js"],"names":["StyleSheet","React","View","requireNativeComponent","Animated","Easing","shimAssert","require","SMXLoadingImage","createClass","propTypes","name","PropTypes","string","size","number","color","accessible","bool","accessibilityLabel","testID","icon","object","getInitialState","angle","Value","setNativeProps","props","_animate","state","setValue","timing","toValue","duration","easing","linear","start","componentDidMount","render","transformStyle","transform","rotate","interpolate","inputRange","outputRange","style","styles","base","basic","nativeProps","backgroundColor","create","overflow","SMXLoadingImageView","module","exports"],"mappings":"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","sourcesContent":["/**\n *\n * @providesModule SMXLoadingImage\n * @flow\n */\n'use strict';\n\nvar React = require('react-native');\nvar { StyleSheet, View, requireNativeComponent, Animated, Easing } = React;\n\nvar shimAssert = require('./shim-assert');\n\nvar SMXLoadingImage = React.createClass({\n  propTypes: {\n    name: React.PropTypes.string,\n    size: React.PropTypes.number,\n    color: React.PropTypes.string,\n\n    /**\n     * accessible - Whether this element should be revealed as an accessible\n     * element.\n     */\n    accessible: React.PropTypes.bool,\n    /**\n     * accessibilityLabel - Custom string to display for accessibility.\n     */\n    accessibilityLabel: React.PropTypes.string,\n\n    /**\n     * testID - A unique identifier for this element to be used in UI Automation\n     * testing scripts.\n     */\n    testID: React.PropTypes.string,\n    icon: React.PropTypes.object\n  },\n\n  getInitialState: function () {\n    return {\n      angle: new Animated.Value(0)\n    };\n  },\n\n  setNativeProps(props:Object) {\n\n  },\n\n  _animate: function () {\n    this.state.angle.setValue(0);\n    Animated.timing(this.state.angle, {\n      toValue: 360,\n      duration: 1200,\n      easing: Easing.linear\n    }).start(this._animate);\n  },\n\n  componentDidMount: function () {\n    this._animate();\n  },\n\n  render: function ():ReactElement {\n    var transformStyle = {\n      transform: [\n        {\n          rotate: this.state.angle.interpolate({\n            inputRange: [0, 360],\n            outputRange: ['0deg', '360deg']\n          })\n        }\n      ]\n    };\n\n    var style = [styles.base, this.props.style];\n\n    shimAssert.basic(style, 'style must be initialized');\n\n    var name = this.props.name;\n    shimAssert.basic(name, 'name must be initialized');\n\n    var size = this.props.size;\n    shimAssert.basic(size, 'size must be initialized');\n\n    var color = this.props.color;\n\n    var nativeProps = Object.assign({},this.props);\n    nativeProps.icon = {\n      name: name,\n      size: size,\n      color: color\n    };\n\n    return <Animated.View style={[styles.base, style, transformStyle]}>\n      <SMXLoadingImageView style={{backgroundColor: 'transparent'}} {...nativeProps} />\n    </Animated.View>;\n  }\n});\n\n\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nvar SMXLoadingImageView = requireNativeComponent('FAKIconImage', SMXLoadingImage);\n\nmodule.exports = SMXLoadingImage;\n"]},"metadata":{},"sourceType":"script"}