{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"E:\\\\ResidenciaDEV\\\\ReactNative\\\\rss-react-native\\\\node_modules\\\\react-native-icons\\\\SMXTabBarIconItemIOS.ios.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require(\"react-native-web/dist/index\");\n\nvar Image = React.Image,\n    StyleSheet = React.StyleSheet,\n    View = React.View,\n    requireNativeComponent = React.requireNativeComponent,\n    PropTypes = React.PropTypes,\n    Dimensions = React.Dimensions;\nvar onlyChild = React.Children.only;\n\nvar StaticContainer = function (_React$Component) {\n  _inherits(StaticContainer, _React$Component);\n\n  var _super = _createSuper(StaticContainer);\n\n  function StaticContainer() {\n    _classCallCheck(this, StaticContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StaticContainer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return !!nextProps.shouldUpdate;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var child = this.props.children;\n      return child === null || child === false ? null : onlyChild(child);\n    }\n  }]);\n\n  return StaticContainer;\n}(React.Component);\n\nvar SmixxTabBarItemIOS = React.createClass({\n  displayName: \"SmixxTabBarItemIOS\",\n  propTypes: {\n    onPress: PropTypes.func.isRequired,\n    selected: PropTypes.bool.isRequired,\n    badgeValue: PropTypes.string,\n    title: PropTypes.string,\n    icon: PropTypes.object,\n    selectedIcon: PropTypes.object\n  },\n  getInitialState: function getInitialState() {\n    return {\n      hasBeenSelected: false\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    if (this.props.selected) {\n      this.setState({\n        hasBeenSelected: true\n      });\n    }\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this.state.hasBeenSelected || nextProps.selected) {\n      this.setState({\n        hasBeenSelected: true\n      });\n    }\n  },\n  render: function render() {\n    var tabContents = null;\n\n    if (this.state.hasBeenSelected) {\n      tabContents = React.createElement(StaticContainer, {\n        shouldUpdate: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    } else {\n      tabContents = React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      });\n    }\n\n    var iconName = this.props.iconName;\n    var iconSize = this.props.iconSize || 28;\n    var selectedIconName = this.props.selectedIconName || this.props.iconName;\n    var selectedIconSize = this.props.selectedIconSize || this.props.iconSize;\n    var icon = {\n      name: iconName,\n      size: iconSize\n    };\n    var selectedIcon = {\n      name: selectedIconName,\n      size: selectedIconSize\n    };\n    return React.createElement(SmixxTabBarItem, {\n      icon: icon,\n      selectedIcon: selectedIcon,\n      onPress: this.props.onPress,\n      selected: this.props.selected,\n      badgeValue: this.props.badgeValue,\n      title: this.props.title,\n      style: [styles.tab, this.props.style],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, tabContents);\n  }\n});\nvar styles = StyleSheet.create({\n  tab: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar SmixxTabBarItem = requireNativeComponent('SMXTabBarItem', SmixxTabBarItemIOS);\nmodule.exports = SmixxTabBarItemIOS;","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/node_modules/react-native-icons/SMXTabBarIconItemIOS.ios.js"],"names":["Image","React","StyleSheet","View","requireNativeComponent","PropTypes","Dimensions","onlyChild","Children","only","StaticContainer","nextProps","shouldUpdate","child","props","children","Component","SmixxTabBarItemIOS","createClass","propTypes","onPress","func","isRequired","selected","bool","badgeValue","string","title","icon","object","selectedIcon","getInitialState","hasBeenSelected","componentWillMount","setState","componentWillReceiveProps","state","render","tabContents","iconName","iconSize","selectedIconName","selectedIconSize","name","size","styles","tab","style","create","position","top","right","bottom","left","SmixxTabBarItem","module","exports"],"mappings":"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","sourcesContent":["/**\n *\n * @providesModule SMXTabBarItemIOS\n * @flow\n */\n'use strict';\n\nvar React = require('react-native');\nvar { Image, StyleSheet, View, requireNativeComponent, PropTypes, Dimensions} = React;\n\nvar onlyChild = React.Children.only;\n\n// Copy this right in here from react-contrib\nclass StaticContainer extends React.Component {\n\n  shouldComponentUpdate(nextProps) {\n    return !!nextProps.shouldUpdate;\n  }\n\n  render() {\n    var child = this.props.children;\n    return (child === null || child === false) ? null : onlyChild(child);\n  }\n\n}\n\nvar SmixxTabBarItemIOS = React.createClass({\n  propTypes: {\n    onPress: PropTypes.func.isRequired,\n    selected: PropTypes.bool.isRequired,\n    badgeValue: PropTypes.string,\n    title: PropTypes.string,\n    icon: PropTypes.object,\n    selectedIcon: PropTypes.object,\n  },\n\n  getInitialState: function() {\n    return {\n      hasBeenSelected: false,\n    };\n  },\n\n  componentWillMount: function() {\n    if (this.props.selected) {\n      this.setState({hasBeenSelected: true});\n    }\n  },\n\n  componentWillReceiveProps: function(nextProps: { selected: boolean }) {\n  if (this.state.hasBeenSelected || nextProps.selected) {\n    this.setState({hasBeenSelected: true});\n  }\n},\n\nrender: function() {\n  var tabContents = null;\n  // if the tab has already been shown once, always continue to show it so we\n  // preserve state between tab transitions\n  if (this.state.hasBeenSelected) {\n    tabContents = (\n      <StaticContainer shouldUpdate={this.props.selected}>\n        {this.props.children}\n      </StaticContainer>\n    );\n  } else {\n    tabContents = <View />;\n  }\n\n  var iconName = this.props.iconName;\n  var iconSize = this.props.iconSize || 28;\n\n  // defaults selectedIconName to iconName, selectedIconSize to iconSize\n  var selectedIconName = this.props.selectedIconName || this.props.iconName;\n  var selectedIconSize = this.props.selectedIconSize || this.props.iconSize;\n\n  var icon = {name : iconName, size: iconSize};\n  var selectedIcon = {name: selectedIconName, size: selectedIconSize};\n\n  return (\n    <SmixxTabBarItem\n      icon={icon}\n      selectedIcon={selectedIcon}\n      onPress={this.props.onPress}\n      selected={this.props.selected}\n      badgeValue={this.props.badgeValue}\n      title={this.props.title}\n      style={[styles.tab, this.props.style]}>\n        {tabContents}\n    </SmixxTabBarItem>\n  );\n}\n});\n\nvar styles = StyleSheet.create({\n  tab: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  }\n});\n\nvar SmixxTabBarItem = requireNativeComponent('SMXTabBarItem', SmixxTabBarItemIOS);\nmodule.exports = SmixxTabBarItemIOS;\n"]},"metadata":{},"sourceType":"script"}