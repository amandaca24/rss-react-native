{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport createDataContext from \"./createDataContext\";\nimport { parse } from 'fast-xml-parser';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar KEY = 'items';\n\nvar saveItems = function saveItems(value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function saveItems$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(KEY, jsonValue));\n\n        case 4:\n          console.log('funcionou');\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('erro: ' + _context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar clearStorage = function clearStorage() {\n  return _regeneratorRuntime.async(function clearStorage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n        case 3:\n          alert('Funcionou!');\n          _context2.next = 10;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          alert('Algum problema ao limpar armazenamento');\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar getItem = function getItem() {\n  var jsonValue;\n  return _regeneratorRuntime.async(function getItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(KEY).then(console.log));\n\n        case 3:\n          jsonValue = _context3.sent;\n          console.log('ITEMS = ' + jsonValue);\n          return _context3.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          alert(\"Algum problema ao buscar um feed\");\n\n        case 11:\n          console.log('Done.');\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar deleteItemStorage = function deleteItemStorage() {\n  return _regeneratorRuntime.async(function deleteItemStorage$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem('@key'));\n\n        case 3:\n          _context4.next = 9;\n          break;\n\n        case 5:\n          _context4.prev = 5;\n          _context4.t0 = _context4[\"catch\"](0);\n          alert('Houve algum problema ao apagar o item');\n          console.log('Erro: ' + _context4.t0);\n\n        case 9:\n          console.log('Done.');\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar feedReducer = function feedReducer(state, action) {\n  var newState = [];\n\n  switch (action.type) {\n    case 'fetch_items':\n      action.payload.feedItems.rss.channel.item.forEach(function (element) {\n        item = {\n          titulo: element.title,\n          link: element.link,\n          descricao: element.description,\n          imagem: element.image,\n          dataPublicacao: element.pubDate\n        };\n        newState.push(item);\n        rssItems.push(item);\n      });\n      saveItems(newState);\n      console.log(\"NOVO ESTADO = \" + newState);\n      return newState;\n\n    case 'get_item':\n      newState = state.filter(function (feed) {\n        return feed.urlFeed === action.payload;\n      });\n      getItem(newState);\n      return newState;\n\n    case 'add_item':\n      newState = [].concat(_toConsumableArray(state), [{\n        titulo: action.payload.titulo,\n        dataPublicacao: action.payload.dataPublicacao,\n        link: action.payload.link,\n        descricao: action.payload.descricao,\n        imagem: action.payload.imagem,\n        urlFeed: action.payload.urlFeed\n      }]);\n      saveItems(newState);\n      return newState;\n\n    case 'delete_item':\n      newState = state.filter(function (item) {\n        return item.link !== action.payload;\n      });\n      deleteItemStorage(newState);\n      return newState;\n\n    case 'restore_state':\n      newState = action.payload;\n      return newState;\n\n    case 'delete_all':\n      clearStorage();\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nvar addItem = function addItem(dispatch) {\n  return function (titulo, dataPublicacao, link, descricao, imagem, callback) {\n    dispatch({\n      type: 'add_item',\n      payload: {\n        titulo: titulo,\n        dataPublicacao: dataPublicacao,\n        link: link,\n        descricao: descricao,\n        imagem: imagem\n      }\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n};\n\nvar getFeedItem = function getFeedItem(dispatch) {\n  return function (id, callback) {\n    dispatch({\n      type: 'get_item',\n      payload: id\n    });\n\n    if (callback) {\n      callback();\n    }\n\n    console.log('Feed i: ' + id);\n  };\n};\n\nvar deleteItem = function deleteItem(dispatch) {\n  return function (id) {\n    dispatch({\n      type: 'delete_feed',\n      payload: id\n    });\n    console.log('deletou o item');\n  };\n};\n\nvar fetchItems = function fetchItems(dispatch) {\n  return function _callee(fetch) {\n    var response, feedItems;\n    return _regeneratorRuntime.async(function _callee$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(fetch.get());\n\n          case 2:\n            response = _context5.sent;\n            feedItems = parse(response.data);\n            dispatch({\n              type: 'fetch_items',\n              payload: {\n                feedItems: feedItems\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar restoreState = function restoreState(dispatch) {\n  return function _callee2() {\n    var savedState;\n    return _regeneratorRuntime.async(function _callee2$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(KEY));\n\n          case 3:\n            savedState = _context6.sent;\n\n            if (!savedState) {\n              console.log('n√£o tem nada salvo');\n            } else {\n              dispatch({\n                type: 'restore_state',\n                payload: JSON.parse(savedState)\n              });\n            }\n\n            _context6.next = 10;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log('erro: ' + _context6.t0);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\n\nvar deleteAll = function deleteAll(dispatch) {\n  return function () {\n    dispatch({\n      type: 'delete_all'\n    });\n    console.log('Apagou tudo!');\n  };\n};\n\nvar rssItems = [];\n\nvar _createDataContext = createDataContext(feedReducer, {\n  deleteItem: deleteItem,\n  fetchItems: fetchItems,\n  restoreState: restoreState,\n  deleteAll: deleteAll,\n  getFeedItem: getFeedItem,\n  addItem: addItem\n}, rssItems),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/src/context/FeedContext.js"],"names":["createDataContext","parse","AsyncStorage","KEY","saveItems","value","jsonValue","JSON","stringify","setItem","console","log","clearStorage","clear","alert","getItem","then","deleteItemStorage","removeItem","feedReducer","state","action","newState","type","payload","feedItems","rss","channel","item","forEach","element","titulo","title","link","descricao","description","imagem","image","dataPublicacao","pubDate","push","rssItems","filter","feed","urlFeed","addItem","dispatch","callback","getFeedItem","id","deleteItem","fetchItems","fetch","get","response","data","restoreState","savedState","deleteAll","Context","Provider"],"mappings":"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","sourcesContent":["import createDataContext from './createDataContext';\r\nimport { parse } from 'fast-xml-parser';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst KEY = 'items';\r\n\r\nconst saveItems = async (value) => {\r\n    try {\r\n        const jsonValue = JSON.stringify(value);\r\n        await AsyncStorage.setItem(KEY, jsonValue);\r\n        console.log('funcionou');\r\n    } catch (e) {\r\n        console.log('erro: ' + e);\r\n    }\r\n}\r\n\r\nconst clearStorage = async () => {\r\n    try {\r\n        await AsyncStorage.clear();\r\n        alert('Funcionou!');\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        alert('Algum problema ao limpar armazenamento');\r\n    }\r\n}\r\n\r\nconst getItem = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(KEY).then(console.log);\r\n      console.log('ITEMS = ' + jsonValue)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n      \r\n    } catch(e) {\r\n      alert(\"Algum problema ao buscar um feed\");\r\n    }\r\n  \r\n    console.log('Done.')\r\n  \r\n  }\r\n\r\n  const deleteItemStorage = async () => {\r\n    try {\r\n        await AsyncStorage.removeItem('@key')\r\n      } catch(e) {\r\n        alert('Houve algum problema ao apagar o item');\r\n        console.log('Erro: ' + e);\r\n      }\r\n    \r\n      console.log('Done.')\r\n  }\r\n\r\n//Os dados do conte√∫do do feed s√£o recuperados pela biblioteca de leitura de XML, o fast-xml-parser.\r\n//O estado √© espalhado e cada atributo recebe o seu valor, sendo salvo sob a chave 'items'.  \r\nconst feedReducer = (state, action) => {\r\n    let newState = [];\r\n    switch (action.type) {\r\n        case 'fetch_items':\r\n            action.payload.feedItems.rss.channel.item.forEach(element => {\r\n                item = {\r\n                    titulo: element.title,\r\n                    link: element.link,\r\n                    descricao: element.description,\r\n                    imagem: element.image,\r\n                    dataPublicacao: element.pubDate\r\n                }\r\n                newState.push(item);\r\n                rssItems.push(item);\r\n                \r\n            });\r\n            saveItems(newState);\r\n            console.log(\"NOVO ESTADO = \" + newState);\r\n            return newState;\r\n        case 'get_item':\r\n            newState = state.filter(\r\n                (feed) => feed.urlFeed === action.payload);\r\n                getItem(newState);\r\n            return newState;\r\n        case 'add_item':\r\n            newState = [\r\n                ...state,\r\n                {\r\n                    titulo: action.payload.titulo,\r\n                    dataPublicacao: action.payload.dataPublicacao,\r\n                    link: action.payload.link,\r\n                    descricao: action.payload.descricao,\r\n                    imagem: action.payload.imagem,\r\n                    urlFeed: action.payload.urlFeed\r\n                }\r\n            ];\r\n            saveItems(newState);\r\n            return newState;\r\n        case 'delete_item':\r\n            newState = state.filter(\r\n                (item) => item.link !== action.payload);\r\n            \r\n            deleteItemStorage(newState);\r\n            return newState;\r\n        case 'restore_state':\r\n            newState = action.payload;\r\n            return newState;\r\n        case 'delete_all':\r\n            clearStorage();\r\n            return [];\r\n        default:\r\n            return state;\r\n    } \r\n};\r\n\r\nconst addItem = dispatch => {\r\n    return (titulo, dataPublicacao, link, descricao, imagem, callback) => {\r\n        dispatch({ type: 'add_item', payload: { titulo, dataPublicacao, link, descricao, imagem } });\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    };\r\n};\r\n\r\nconst getFeedItem = dispatch =>{\r\n    return(id, callback) => {\r\n        dispatch({type: 'get_item', payload: id });\r\n        if(callback){\r\n            callback();\r\n        }\r\n        console.log('Feed i: ' + id);\r\n    }\r\n}\r\n\r\nconst deleteItem = dispatch => {\r\n    return (id) => {\r\n        dispatch({ type: 'delete_feed', payload: id });\r\n        console.log('deletou o item');\r\n    };\r\n};\r\n\r\nconst fetchItems = dispatch => async (fetch) => {\r\n    const response = await fetch.get();\r\n    const feedItems = parse(response.data);\r\n    \r\n    dispatch({type: 'fetch_items', payload: {feedItems}});\r\n    \r\n};\r\n\r\nconst restoreState = dispatch => async () => {\r\n    try {\r\n        const savedState = await AsyncStorage.getItem(KEY);\r\n        if (!savedState) {\r\n            console.log('n√£o tem nada salvo');\r\n        }\r\n        else {\r\n            //console.log(savedState);\r\n            dispatch({ type: 'restore_state', payload: JSON.parse(savedState) })\r\n        }\r\n    } catch (e) {\r\n        console.log('erro: ' + e);\r\n    }\r\n}\r\n\r\nconst deleteAll = dispatch => {\r\n    return () => {\r\n        dispatch({ type: 'delete_all' })\r\n        console.log('Apagou tudo!');\r\n    }\r\n}\r\n\r\nconst rssItems = [];\r\n\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n    feedReducer,\r\n    { deleteItem, fetchItems, restoreState, deleteAll, getFeedItem, addItem },\r\n    rssItems\r\n);\r\n"]},"metadata":{},"sourceType":"module"}