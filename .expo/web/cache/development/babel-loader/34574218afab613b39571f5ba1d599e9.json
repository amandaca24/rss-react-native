{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\ResidenciaDEV\\\\ReactNative\\\\rss-react-native\\\\src\\\\screens\\\\AddFeedScreen.js\";\n\nimport React from 'react';\nimport { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Context } from \"../context/FeedContext\";\n\nvar AddFeedScreen = function AddFeedScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(Context),\n      _useState2 = _slicedToArray(_useState, 1),\n      addFeed = _useState2[0];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      titulo = _useState4[0],\n      setTitulo = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      urlFeed = _useState6[0],\n      setUrlFeed = _useState6[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \" Informe o t\\xEDtulo do feed \"), React.createElement(TextInput, {\n    style: styles.input,\n    required: true,\n    id: \"titulo\",\n    value: titulo,\n    onChangeText: function onChangeText(text) {\n      return setTitulo(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \" Informe a url do feed \"), React.createElement(TextInput, {\n    style: styles.input,\n    required: true,\n    id: \"urlFeed\",\n    value: urlFeed,\n    onChangeText: function onChangeText(text) {\n      return setUrlFeed(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    containedPrimary: true,\n    title: \"Adicionar Feed\",\n    onPress: function onPress(titulo, urlFeed) {\n      return addFeed(titulo, urlFeed, function () {\n        return navigation.navigate('Index');\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    borderTopWidth: 1,\n    borderColor: 'gray'\n  },\n  icon: {\n    fontSize: 24\n  },\n  input: {\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 15,\n    padding: 5,\n    margin: 5\n  }\n});\nAddFeedScreen.defaultProps = {\n  initialValues: {\n    titulo: \"\",\n    urlFeed: \"\"\n  }\n};\nexport default AddFeedScreen;","map":{"version":3,"sources":["E:/ResidenciaDEV/ReactNative/rss-react-native/src/screens/AddFeedScreen.js"],"names":["React","useContext","useState","Context","AddFeedScreen","navigation","addFeed","titulo","setTitulo","urlFeed","setUrlFeed","styles","row","input","text","navigate","StyleSheet","create","flexDirection","justifyContent","paddingVertical","paddingHorizontal","borderTopWidth","borderColor","icon","fontSize","borderWidth","marginBottom","padding","margin","defaultProps","initialValues"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useContext, useState } from 'react';\nimport { Text, TextInput, View, StyleSheet, Button } from 'react-native';\nimport {Context} from '../context/FeedContext';\n\nconst AddFeedScreen = ({ navigation }) => {\n    const [addFeed] = useState(Context);\n    const [titulo, setTitulo] = useState(\"\");\n    const [urlFeed, setUrlFeed] = useState(\"\");\n    \n    return (\n        <>\n            <View style={styles.row}>\n                <Text> Informe o t√≠tulo do feed </Text>\n                <TextInput style={styles.input} required id=\"titulo\" \n                    value={titulo} onChangeText={text => setTitulo(text)}/>\n                <Text> Informe a url do feed </Text>\n                <TextInput style={styles.input} required id=\"urlFeed\"\n                    value={urlFeed} onChangeText={text => setUrlFeed(text)}/>\n            </View>\n            <View>\n                <Button \n                    containedPrimary title=\"Adicionar Feed\" \n                    onPress={ (titulo, urlFeed) => \n                        addFeed(titulo, urlFeed, () => navigation.navigate('Index'))}/>\n            </View>\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: 20,\n        paddingHorizontal: 10,\n        borderTopWidth: 1,\n        borderColor: 'gray'\n    },\n    icon: {\n        fontSize: 24\n    },\n    input: {\n        fontSize: 18,\n        borderWidth: 1,\n        borderColor: 'black',\n        marginBottom: 15,\n        padding: 5,\n        margin: 5\n    }\n});\n\nAddFeedScreen.defaultProps = {\n    initialValues: {\n        titulo: \"\",\n        urlFeed: \"\"\n    }\n}\n\nexport default AddFeedScreen;\n"]},"metadata":{},"sourceType":"module"}